server:
  port: ${APPLICATION_PORT:8081}

rabbitmq:
  queue: test-queue

spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: user
    password: password
  application:
    name: booking-free
  datasource:
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:10}
    url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:${DATASOURCE_PORT:5432}/${DATASOURCE_DATABASE:postgres}
    username: ${DATASOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:1}
  flyway:
    clean-on-validation-error: ${FLYWAY_CLEAN_ON_VALIDATION_ERROR:true}
    enabled: true
    placeholder-replacement: false
    clean-disabled: false
  jpa:
    open-in-view: false
    properties:
      hibernate:
        generate_statistics: ${GENERATE_JDBC_REQUEST_STATISTICS:false}
        jdbc:
          batch_size: ${JDBC_BATCH_REQUEST_SIZE:100}
        order_inserts: true
        order_updates: true
    show-sql: false
  main:
    allow-bean-definition-overriding: true

management:
  endpoint:
    health:
      enabled: true
      show-details: always
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, prometheus, metrics
  metrics:
    export:
      prometheus:
        enabled: true